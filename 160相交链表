#https://leetcode-cn.com/problems/intersection-of-two-linked-lists/
# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

#到尾节点后，交换往下跑，到相交就是进入点，因为短的切换到长的，长的切换到短的，刚好长度就一样了。不想交的链表，交换后，刚好同时到达尾节点，都是None退出
class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
        pa=headA
        pb=headB
        while not pa==pb:
            if pa:
                pa=pa.next
            else:
                pa=headB
            if pb:
                pb=pb.next
            else:
                pb=headA
        return pa
