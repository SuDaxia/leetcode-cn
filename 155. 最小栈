#https://leetcode-cn.com/problems/min-stack/
class MinStack(object):

    def __init__(self):
        """
        initialize your data structure here.
        """
        self.data=[]
        self.min_e=[]


    def push(self, x):
        """
        :type x: int
        :rtype: None
        """
        if len(self.min_e)>0:
            e=self.min_e[len(self.min_e)-1]
        
            if e<x:
                self.min_e.append(e)
            else:
                self.min_e.append(x)
        else:
            self.min_e.append(x)
        self.data.append(x)
        #print self.data
        #print self.min_e

    def pop(self):
        """
        :rtype: None
        """
        self.data.pop()
        self.min_e.pop()


    def top(self):
        """
        :rtype: int
        """
        if len(self.data)>0:
            return self.data[len(self.data)-1]
        else:
            return None


    def getMin(self):
        """
        :rtype: int
        """
        if len(self.min_e)>0:
            return self.min_e[len(self.min_e)-1]
        else:
            return None



# Your MinStack object will be instantiated and called as such:
# obj = MinStack()
# obj.push(x)
# obj.pop()
# param_3 = obj.top()
# param_4 = obj.getMin()
