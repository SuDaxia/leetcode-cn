# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution(object):
    def mergeKLists(self, lists):
        """
        :type lists: List[ListNode]
        :rtype: ListNode
        """
        lists=[x for x in lists if x!=None]
        if len(lists)<1:
            return None
        head=lists[0]
        for k in range(1,len(lists)):
            if lists[k]<lists[k-1]:
                head=lists[k]
                print("k:",k)
        curPoint=head
        while len(lists)>0:
            cur=0
            for j in range(1,len(lists)):
                if lists[j-1] == None:
                    lists.remove(lists[j-1])
                    continue
                elif lists[j] == None:
                    lists.remove(lists[j])
                    continue
                else:
                    if lists[j].val<lists[j-1].val:
                        cur=j
            curPoint.next=lists[cur]
            curPoint=curPoint.next
            lists[cur]=lists[cur].next
        return head
        
